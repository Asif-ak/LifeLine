// <auto-generated />
using System;
using LifeLine_WebApi.DBConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LifeLineWebAPi.Migrations
{
    [DbContext(typeof(LifeLineContext))]
    partial class LifeLineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065");

            modelBuilder.Entity("LifeLine_WebApi.Models.Donor", b =>
                {
                    b.Property<int>("DonorID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<byte>("DonorBloodtype");

                    b.Property<string>("DonorCellNumber")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("DonorName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("DonorID");

                    b.ToTable("Donors");
                });

            modelBuilder.Entity("LifeLine_WebApi.Models.Requestor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("RequestedOn");

                    b.Property<string>("RequestorCellNumber")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.Property<string>("RequestorName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("Requestor");
                });

            modelBuilder.Entity("LifeLine_WebApi.Models.Requests", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<byte>("RequestedBloodtype");

                    b.Property<int?>("RequestorID");

                    b.HasKey("RequestID");

                    b.HasIndex("RequestorID");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("LifeLine_WebApi.Models.Requests", b =>
                {
                    b.HasOne("LifeLine_WebApi.Models.Requestor", "Requestor")
                        .WithMany("Requests")
                        .HasForeignKey("RequestorID");
                });
#pragma warning restore 612, 618
        }
    }
}
